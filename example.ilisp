(load "standard.ilisp")

(concat "hello" " " "martin")           ; hello martin
(unpack + '(1 2 3))                     ; 6
(pack head 1 2 3)                       ; 1

(do
  (print "do first")
  (print "do second"))

(let '(x) '(100)
  '(do
    (print x)))

(let '(x) '(1) '(x))

((flip concat) "hi" "world")            ; worldhi
(def '(mul-neg) (comp - (unpack *)))
(mul-neg '(2 8))                        ; 16

(fst '(1 2 3))                          ; 1
(snd '(1 2 3))                          ; 2
(trd '(1 2 3))                          ; 3

(len '(1 1 1))                          ; 3

(nth 0 '(10 20 30 40))                  ; 10
(nth 2 '(10 20 30 40))                  ; 30

(last '(10 20 30 40))                   ; 40

(take 2 '(1 2 3 4))                     ; 1 2
(drop 2 '(1 2 3 4))                     ; 3 4
(split 3 '(1 2 3 4 5))                  ; (1 2 3) (4 5)

(elem 4 '(1 2 3 4 5 99))                ; 1 (true)

(map (fn '(x) '(* x 2)) '(1 2 3))       ; 2 4 6

(filter (fn '(x) '(== x 1)) '(0 1 0 1)) ; 1 1

(foldl + 0 '(1 2 3 4 5))                ; 15

(sum '(1 2 3))                          ; 6
(product '(1 2 3 4))                    ; 24

(defn '(name-of-num) '(x)
  '(select
    '((== x 0) "zero")
    '((== x 1) "one")
    '(true "other")))

(name-of-num 1)                           ; "two"
(name-of-num 3)                           ; "other"

(defn '(day-name) '(x)
  '(case x
     '(0 "Monday")
     '(1 "Tuesday")
     '(2 "Wednesday")))

(day-name 2)                              ; Wednesday

(fib 12)                                  ; 144
